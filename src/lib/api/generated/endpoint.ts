/**
 * Generated by orval v6.20.0 🍺
 * Do not edit manually.
 * Kayord.IOT
 * OpenAPI spec version: v1
 */
import { createMutation } from "@tanstack/svelte-query";
import type { CreateMutationOptions, MutationFunction } from "@tanstack/svelte-query";
import type { InternalErrorResponse, Response } from "./api.schemas";
import { useCustomClient } from "../mutator/useCustomClient";
import type { ErrorType } from "../mutator/useCustomClient";

export const useKayordKitApiHook = () => {
	const kayordKitApi = useCustomClient<Response>();

	return () => {
		return kayordKitApi({ url: `/endpoint`, method: "post" });
	};
};

export const useKayordKitApiMutationOptions = <
	TError = ErrorType<InternalErrorResponse>,
	TVariables = void,
	TContext = unknown,
>(options?: {
	mutation?: CreateMutationOptions<
		Awaited<ReturnType<ReturnType<typeof useKayordKitApiHook>>>,
		TError,
		TVariables,
		TContext
	>;
}): CreateMutationOptions<
	Awaited<ReturnType<ReturnType<typeof useKayordKitApiHook>>>,
	TError,
	TVariables,
	TContext
> => {
	const { mutation: mutationOptions } = options ?? {};

	const kayordKitApi = useKayordKitApiHook();

	const mutationFn: MutationFunction<
		Awaited<ReturnType<ReturnType<typeof useKayordKitApiHook>>>,
		TVariables
	> = () => {
		return kayordKitApi();
	};

	return { mutationFn, ...mutationOptions };
};

export type KayordKitApiMutationResult = NonNullable<
	Awaited<ReturnType<ReturnType<typeof useKayordKitApiHook>>>
>;

export type KayordKitApiMutationError = ErrorType<InternalErrorResponse>;

export const createKayordKitApi = <
	TError = ErrorType<InternalErrorResponse>,
	TVariables = void,
	TContext = unknown,
>(options?: {
	mutation?: CreateMutationOptions<
		Awaited<ReturnType<ReturnType<typeof useKayordKitApiHook>>>,
		TError,
		TVariables,
		TContext
	>;
}) => {
	const mutationOptions = useKayordKitApiMutationOptions(options);

	return createMutation(mutationOptions);
};
