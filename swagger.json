{
  "x-generator": "NSwag v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Kayord.IOT",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:5117"
    }
  ],
  "paths": {
    "/test": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "ApiTest",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Test"
        ],
        "operationId": "KayordPOSFeaturesTest",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/endpoint": {
      "post": {
        "tags": [
          "Endpoint"
        ],
        "operationId": "Api",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sensorReading": {
      "get": {
        "tags": [
          "Sensorreading"
        ],
        "operationId": "SensorReadingGetAllToday",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SensorReading"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sensor": {
      "get": {
        "tags": [
          "Sensor"
        ],
        "operationId": "SensorGetAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SensorDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sensor"
        ],
        "operationId": "SensorEdit",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sensor"
        ],
        "operationId": "SensorDelete",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Request2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request2"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sensor"
        ],
        "operationId": "SensorCreate",
        "requestBody": {
          "x-name": "Request",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request3"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sensor"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InternalErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "status",
          "code",
          "reason",
          "note"
        ],
        "properties": {
          "status": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          },
          "note": {
            "type": "string"
          }
        }
      },
      "Response": {
        "allOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Response2"
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PageNumber": {
                "type": "integer",
                "format": "int32"
              },
              "TotalPages": {
                "type": "integer",
                "format": "int32"
              },
              "PageSize": {
                "type": "integer",
                "format": "int32"
              },
              "CurrentPageSize": {
                "type": "integer",
                "format": "int32"
              },
              "CurrentStartIndex": {
                "type": "integer",
                "format": "int32"
              },
              "CurrentEndIndex": {
                "type": "integer",
                "format": "int32"
              },
              "TotalCount": {
                "type": "integer",
                "format": "int32"
              },
              "HasPrevious": {
                "type": "boolean"
              },
              "HasNext": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "Response2": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "routeName",
          "endpointName",
          "reqDtoName",
          "resDtoName"
        ],
        "properties": {
          "routeName": {
            "type": "string"
          },
          "endpointName": {
            "type": "string"
          },
          "reqDtoName": {
            "type": "string"
          },
          "resDtoName": {
            "type": "string"
          }
        }
      },
      "SensorReading": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sensorId",
          "time"
        ],
        "properties": {
          "sensorId": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "SensorDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "topic",
          "lastUpdatedString"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "topic": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedString": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "statusCode",
          "message",
          "errors"
        ],
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "Request": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "topic"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          },
          "topic": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Request2": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "Sensor": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "topic"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "topic": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Request3": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "topic"
        ],
        "properties": {
          "topic": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}